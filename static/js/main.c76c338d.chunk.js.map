{"version":3,"sources":["redux/types.js","redux/actions/actions.js","components/Error.js","text.js","components/PostForm.js","components/EditPostForm.js","components/Post.js","components/Posts.js","components/ModalWindow.js","components/Navbar.js","App.js","reportWebVitals.js","redux/postReducer.js","redux/appReducer.js","redux/rootReducer.js","index.js"],"names":["CREATE_POST","EDIT_POST","DELETE_POST","FETCH_POSTS","SHOW_LOADER","HIDE_LOADER","SHOW_ERROR","HIDE_ERROR","SHOW_COLLAPSE","HIDE_COLLAPSE","editPost","post","type","payload","showErrorHide300sec","text","dispatch","setTimeout","Error","className","role","SAVE","mapDispatchToProps","createPost","showError","connect","state","error","app","props","useState","title","content","param","setParam","changeInputHandler","event","persist","prev","target","name","value","Form","onSubmit","preventDefault","trim","newPost","id","Number","Date","now","toString","showPanel","Group","controlId","Label","Control","onChange","as","Button","variant","onEditBlock","useDispatch","changeInputPostHandler","postEdit","rows","Post","onDelete","editBlock","setEditBlock","Card","changeEditBlock","bind","Body","Title","Text","Link","onClick","deletePostDispatch","postId","edit","syncPost","stateMock","posts","handleDelete","length","reverse","map","ModalWindow","Modal","show","onHide","handleClose","Header","closeButton","NavBar","setShow","Navbar","collapseOnSelect","expand","bg","Container","Brand","Nav","href","NavLink","this","App","open","setOpen","style","paddingTop","paddingBottom","Row","Col","Collapse","in","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","fetchedPosts","loading","collapsePanel","rootReducer","combineReducers","action","concat","filter","stateLoad","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":"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","file":"static/js/main.c76c338d.chunk.js","sourcesContent":["export const CREATE_POST = 'POST/CREATE_POST';\nexport const EDIT_POST = 'POST/EDIT_POST';\nexport const DELETE_POST = 'POST/DELETE_POST';\nexport const FETCH_POSTS = 'POST/FETCH_POST';\n\nexport const SHOW_LOADER = 'POST/SHOW_LOADER';\nexport const HIDE_LOADER = 'POST/HIDE_LOADER';\n\nexport const SHOW_ERROR = 'POST/SHOW_ERROR';\nexport const HIDE_ERROR = 'POST/HIDE_ERROR';\n\nexport const SHOW_COLLAPSE = 'POST/SHOW_COLLAPSE';\nexport const HIDE_COLLAPSE = 'POST/HIDE_COLLAPSE';","import {\n    CREATE_POST, DELETE_POST,\n    EDIT_POST,\n    FETCH_POSTS, HIDE_COLLAPSE,\n    HIDE_ERROR,\n    HIDE_LOADER,\n    SHOW_COLLAPSE,\n    SHOW_ERROR,\n    SHOW_LOADER\n} from \"../types\";\n\nexport function createPost(post) {\n    return {\n        type: CREATE_POST,\n        payload: post       //этот пост обрабатывается в postReducer в case CREATE_POST => (action.payload)\n    }\n}\n\nexport function editPost(post) {\n    return {\n        type: EDIT_POST,\n        payload: post       //этот пост обрабатывается в postReducer в case EDIT_POST => (action.payload)\n    }\n}\n\nexport function deletePost(postId) {\n    return {\n        type: DELETE_POST,\n        payload: postId       //этот пост обрабатывается в postReducer в case EDIT_POST => (action.payload)\n    }\n}\n\nexport function showLoader() {\n    return {\n        type: SHOW_LOADER\n    }\n}\n\nexport function hideLoader() {\n    return {\n        type: HIDE_LOADER\n    }\n}\n\nexport function showCollapse() {\n    return {\n        type: SHOW_COLLAPSE\n    }\n}\n\nexport function hideCollapse() {\n    return {\n        type: HIDE_COLLAPSE\n    }\n}\n\nexport function showErrorHide300sec(text) {\n    return dispatch => {\n        dispatch({\n            type: SHOW_ERROR,\n            payload: text\n        })\n\n        setTimeout(() => {\n            dispatch(hideError())\n        }, 3000)\n    }\n}\n\nexport function showError(text) {\n    return {\n        type: SHOW_ERROR,\n        payload: text\n    }\n}\n\nexport function hideError(text) {\n    return {\n        type: HIDE_ERROR\n    }\n}\n\nexport function fetchPosts() {\n    return async dispatch => {\n        try {\n            dispatch(showLoader());\n            const response = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=5');\n            const json = await response.json();\n            setTimeout(() => {\n                dispatch({type: FETCH_POSTS, payload: json})\n                dispatch(hideLoader());\n            }, 500);\n        } catch (e) {\n            dispatch(showErrorHide300sec('Bad load fetch posts'));\n            dispatch(hideLoader());\n        }\n\n    }\n}\n","import React from \"react\";\n\nexport const Error = ({text}) => {\n    return (\n        <div className=\"alert alert-warning\" role=\"alert\">\n            error: {text}\n        </div>\n    )\n}","export const NEW_ARTICLE = 'Create new post';\nexport const CLOSE_FORM = 'Close Form';\nexport const TITLE = 'Title';\nexport const CONTENT = 'Content';\n\nexport const CREATE = 'New';\nexport const UPDATE = 'Edit';\nexport const SAVE = 'Save';\nexport const DELETE = 'Delete';\nexport const HIDE = 'Hide'\n","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {createPost, showErrorHide300sec} from \"../redux/actions/actions\";\nimport {Error} from \"./Error\";\nimport {CONTENT, TITLE, SAVE} from \"../text\";\n\nconst PostForm = (props) => {\n    const [param, setParam] = useState({title: '', content: ''});\n    const submitHandler = event => {\n        event.preventDefault();\n        if (!param.title.trim() || !param.content.trim()) {\n            return props.showError(\"Title and Content have to fill\");\n        }\n        const newPost = {\n            id: Number(Date.now().toString()),\n            title: param.title,\n            content: param.content\n        }\n        props.createPost(newPost);\n        setParam({title: '', content: ''});\n        props.showPanel(false);\n    }\n\n    const changeInputHandler = event => {\n        event.persist();\n        setParam(prev => ({\n            ...prev, ...{\n                [event.target.name]: event.target.value\n            }\n        }));\n    }\n\n    return (\n        <Form className=\"border p-5 col-lg-6 mx-auto\" onSubmit={submitHandler}>\n            {props.error && <Error text={props.error}/>}\n            <Form.Group className=\"mb-3\" controlId=\"title\">\n                <Form.Label>{TITLE}</Form.Label>\n                <Form.Control\n                    name=\"title\"\n                    value={param.title}\n                    onChange={changeInputHandler}\n                    type=\"text\"/>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"content\">\n                <Form.Label>{CONTENT}</Form.Label>\n                <Form.Control as=\"textarea\"\n                              name=\"content\"\n                              value={param.content}\n                              onChange={changeInputHandler}\n                              type=\"text\"/>\n            </Form.Group>\n\n            <Button variant=\"info\" type=\"submit\" className=\"text-white\">\n                {SAVE}\n            </Button>\n        </Form>\n    )\n}\n\nconst mapDispatchToProps = {\n    createPost: createPost,\n    showError: showErrorHide300sec,\n}\n\nconst mapStateToProps = state => ({\n    error: state.app.error\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\n\n","import React, {useState} from 'react';\nimport {connect, useDispatch} from \"react-redux\";\nimport {editPost, hideCollapse} from \"../redux/actions/actions\";\nimport {SAVE} from \"../text\";\n\n\nfunction EditPostForm({post, onEditBlock}) {\n    const dispatch = useDispatch();\n    const [param, setParam] = useState({title: post.title, content: post.content});\n\n    const editPostHandler = event => {\n        event.preventDefault();\n\n        if (!param.title.trim() || !param.content) {\n            return\n        }\n        const postEdit = {\n            ...post,\n            ...{\n                title: param.title,\n                content: param.content\n            }\n        };\n        dispatch(editPost(postEdit));\n        dispatch(hideCollapse());\n        onEditBlock(false);\n    }\n\n    const changeInputPostHandler = event => {\n        event.persist();\n        setParam(prev => ({\n                ...prev, ...{\n                    [event.target.name]: event.target.value\n                }\n            })\n        )\n    }\n\n    return (\n        <form className=\"collapse-to-left m-3\" onSubmit={editPostHandler}>\n            <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control mb-3\"\n                    id=\"title\"\n                    value={param.title}\n                    name=\"title\"\n                    onChange={changeInputPostHandler}\n                />\n                <textarea\n                    className=\"form-control mb-3\"\n                    id=\"content\"\n                    value={param.content}\n                    name=\"content\"\n                    onChange={changeInputPostHandler}\n                    rows=\"4\"\n                />\n                <button className=\"btn btn-info text-white mb-2\" type=\"submit\">{SAVE}</button>\n            </div>\n\n        </form>\n    )\n}\n\nconst mapDispatchToProps = {\n    editPost: editPost\n}\nexport default connect(null, mapDispatchToProps)(EditPostForm);\n\n","import React, {useState} from 'react';\nimport EditPostForm from \"./EditPostForm\";\nimport {UPDATE, HIDE, DELETE} from \"../text\";\nimport {Card} from \"react-bootstrap\";\n\nconst Post = ({post, onDelete}) => {\n    const [editBlock, setEditBlock] = useState(false);\n\n    const handleEditBtn = (changeEditBlock) => {\n        setEditBlock(changeEditBlock);\n    }\n\n    return (\n        <Card className=\"my-3 \">\n            {editBlock ?\n                <EditPostForm onEditBlock={handleEditBtn.bind(this)} post={post}/>\n                :\n                <Card.Body>\n                    <Card.Title>{post.title}</Card.Title>\n                    <Card.Text>{post.content}</Card.Text>\n\n                </Card.Body>\n            }\n            <div className=\"d-flex justify-content-end\">\n                <Card.Link\n                    onClick={() => setEditBlock(!editBlock)}\n                    className=\"text-uppercase btn btn-light m-3 mt-0  mr-1  justify-content-end\"\n                >{!editBlock ? UPDATE : HIDE}</Card.Link>\n                <Card.Link\n                    onClick={() => onDelete(post.id)}\n                    className=\"text-uppercase btn btn-light m-3 mt-0  mr-1  justify-content-end\"\n                >{DELETE}</Card.Link>\n            </div>\n        </Card>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Post from \"./Post\";\nimport {deletePost, editPost} from \"../redux/actions/actions\";\n\nconst Posts = (props) => {\n\n    const handleDelete = (postId) => {\n        props.deletePostDispatch(postId);\n    }\n\n    if (!props.syncPost.length) {\n        return <p className=\"text-center\">don't have posts yet</p>\n    }\n    return [...props.syncPost].reverse()\n        .map(post => <Post\n            post={post}\n            key={post.id}\n            onDelete={handleDelete.bind(this)}\n        />);\n}\n\nconst mapStateToProps = state => ({\n    error: state.app.error,\n    syncPost: state.stateMock.posts\n})\nconst mapDispatchToProps = {\n    deletePostDispatch: deletePost,\n    edit: editPost,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n","import {Modal} from \"react-bootstrap\";\nimport React from \"react\";\n\nconst ModalWindow = (props) => {\n    return (\n        <Modal show={props.show} onHide={() => {\n            props.handleClose(false)\n        }}>\n            <Modal.Header closeButton>\n                <Modal.Title>Info</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                Simple Example with React-Redux, Bootstrap.\n                <br/>\n                <br/>\n                You can:\n                <ul>\n                    <li>add new post</li>\n                    <li>edit post</li>\n                    <li>delete post</li>\n                </ul>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default ModalWindow;","import React, {useState} from \"react\";\nimport {Navbar, Container, Nav, NavLink} from \"react-bootstrap\";\nimport ModalWindow from \"./ModalWindow\";\n\nexport default function NavBar() {\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n        setShow(false);\n    }\n    const handleShow = () => {\n        setShow(true);\n    }\n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"shadow-sm p-3 mb-5\">\n                <Container>\n                    <Navbar.Brand>Olha Tarchan</Navbar.Brand>\n                    <Nav className=\"m-sm-2\">\n                        <a className=\"py-2 me-3 text-white text-decoration-none\" target=\"_blank\"\n                           href=\"https://github.com/olha-tarchan/react-redux-posts\">\n                            GITHUB</a>\n                    </Nav>\n                    <Nav className=\"m-sm-2\">\n                        <NavLink variant=\"info\" className=\" me-3 text-white text-uppercase\"\n                                onClick={handleShow}>Info</NavLink>\n                    </Nav>\n                </Container>\n            </Navbar>\n            <ModalWindow show={show} handleClose={handleClose.bind(this)}/>\n        </>\n    )\n}","import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PostForm from \"./components/PostForm\";\nimport Posts from \"./components/Posts\";\nimport {NEW_ARTICLE, CLOSE_FORM} from \"./text\";\nimport {Button, Collapse} from \"react-bootstrap\";\nimport Navbar from './components/Navbar';\nimport {Container, Row, Col} from \"react-bootstrap\";\n\n\nfunction App() {\n  const [open, setOpen] = useState(false);\n\n  const closePanelAfterSave = () => {\n    setOpen(false);\n  }\n  return (\n      <>\n        <Navbar/>\n        <Container style={{paddingTop: '2rem', paddingBottom: '2rem'}}>\n          <Row>\n            <Col>\n              <div className=\"d-flex justify-content-end\">\n                <div className=\" m-auto\">\n                  <Button\n                      onClick={() => setOpen(!open)}\n                      aria-controls=\"example-collapse-text\"\n                      aria-expanded={open}\n                      variant=\"info\"\n                      className=\"text-white\"\n                  >\n                    {open ? CLOSE_FORM : NEW_ARTICLE }\n                  </Button>\n                </div>\n              </div>\n              <div>\n                <Collapse in={open}>\n                  <div id=\"example-collapse-text\" className=\"mt-3\">\n                    <PostForm showPanel={closePanelAfterSave.bind(this)}/>\n                  </div>\n                </Collapse>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\" col-lg-6 mx-auto my-3 p-3 box-shadow\">\n              <Posts/>\n            </Col>\n          </Row>\n        </Container>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\n\nexport default reportWebVitals;\n","import {CREATE_POST, DELETE_POST, EDIT_POST, FETCH_POSTS} from \"./types\";\n\nconst initialState = {\n    posts: [\n        {\n            id: 1630394554061,\n            title: \"Lorem ipsum dolor sit amet\",\n            content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce enim nunc, volutpat tristique malesuada eget, interdum in orci. Morbi egestas orci a leo tempor posuere. Maecenas consectetur tincidunt ligula vel scelerisque. Fusce tortor velit, pharetra nec pretium nec, fringilla at lacus. Morbi blandit nulla vitae nisl euismod, id posuere purus imperdiet.'\n        },\n        {\n            id: 1630394553061,\n            title: \"Donec quam lorem\",\n            content: 'Donec quam lorem, tempor ac ornare eget, ultrices ac erat. Praesent ultrices metus nec nisl rutrum, at blandit eros pharetra. Quisque maximus id felis auctor posuere. '\n        },\n        {\n            id: 1630393553061,\n            title: \"Nam sed nisl\",\n            content: 'Nam sed nisl ac orci tempor dignissim ut ut purus. Pellentesque lectus sem, elementum eget massa eu, lobortis vestibulum purus. Aenean vulputate pellentesque risus, vel pulvinar nibh mattis quis. Aliquam ut molestie lorem. '\n        },\n\n    ],\n    fetchedPosts: []\n}\nlet newPost = [];\nexport const postReducer = (\n    state = initialState,\n    action) => {\n    switch (action.type) {\n        case CREATE_POST:\n            return {...state, posts: state.posts.concat(action.payload)}\n        //return {...state, posts: [...state.posts, action.payload]}\n        case EDIT_POST:\n            newPost = state.posts.map(post => {\n                if (post.id === action.payload.id) {\n                    post.title = action.payload.title;\n                    post.content = action.payload.content;\n                }\n                return post\n            })\n            return {...state, posts: newPost}\n        case DELETE_POST:\n            newPost = state.posts.filter(post => post.id !== action.payload);\n            return {...state, posts: newPost}\n\n        case FETCH_POSTS:\n            return {...state, fetchedPosts: action.payload}\n\n        default:\n            return state;\n    }\n}","import {\n    HIDE_ERROR, SHOW_ERROR,\n    HIDE_LOADER, SHOW_LOADER,\n    HIDE_COLLAPSE, SHOW_COLLAPSE,\n\n} from \"./types\";\n\n\nconst initialState = {\n    loading: false,\n    error: null,\n    collapsePanel: false\n\n}\nexport const appReducer = (stateLoad = initialState, action) => {\n    switch (action.type) {\n        case SHOW_LOADER:\n            return {...stateLoad, loading: true};\n        case HIDE_LOADER:\n            return {...stateLoad, loading: false}\n        case SHOW_ERROR:\n            return {...stateLoad, error: action.payload};\n        case HIDE_ERROR:\n            return {...stateLoad, error: null}\n        case SHOW_COLLAPSE:\n            return {...stateLoad, collapsePanel: true};\n        case HIDE_COLLAPSE:\n            return {...stateLoad, collapsePanel: false}\n\n        default:\n            return stateLoad;\n    }\n}","import {combineReducers} from \"redux\";\nimport {postReducer} from \"./postReducer\";\nimport {appReducer} from \"./appReducer\";\n\nexport const rootReducer = combineReducers({\n    stateMock: postReducer,\n    app: appReducer\n});","import React from 'react';\nimport {render} from 'react-dom';\nimport {compose, createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {rootReducer} from './redux/rootReducer';\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nrender(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}